NextJS + Postgres and Error Monitoring - Full Stack Support Ticketing System

-install Next.js project with command npx create-next-app@latest
-open web page: https://sentry.io/welcome/ and create a project
-type command: npx @sentry/wizard@latest -i nextjs --saas --org full-stack-apps --project quick-ticket
-in .env file add variable SENTRY_AUTH_TOKEN
-open route: http://localhost:3000/sentry-example-page and click Throw Sample Error button
-open web page: https://neon.tech/ and create new project and database
-in .env file add variable DATABASE_URL
-type command: npx prisma init
-in schema.prisma create model Ticket
-type command: npx prisma migrate dev --name init
-type command: npx prisma generate
-in package.json file add command postinstall
-type command: npx prisma studio
-type command: npm run dev
-in component app/page.tsx import React icon and component Link
-in jsx create HTML elements with Tailwind CSS classes
-in globals.css create @keyframes slideUp
-create class .animate-slide
-in folder app create folder tickets and component page.tsx
-in folder tickets create folder new and component page.tsx
-in folder src create folder actions
-in folder actions create ticket.actions.ts file
-in ticket.actions.ts file add directive 'use server'
-create and export function createTicket()
-create component ticket-form.tsx
-in component new/page.tsx import component NewTicketForm from component ticket-form.tsx
-in component ticket-form.tsx create and export function NewTicketForm()
-import functions useActionState and useEffect from package react
-import function useRouter from package next/navigation
-import function createTicket from ticket.actions.ts file
-open route: http://localhost:3000/tickets/new
-create folder db and prisma.ts file
-in ticket.actions.ts file import prisma object
-import revalidatePath function from package next/cache
-add try - catch blocks
-in try block create variable const ticket
-create folder utils and sentry.ts file
-in sentry.ts file create and export function logEvent()
-in ticket.actions.ts file import function logEvent from sentry.ts file
-open link: https://www.npmjs.com/package/sonner
-type command: npm i sonner
-in component layout.tsx import component Toaster from package sonner
-in component ticket-form.tsx import function toast from package sonner
-in ticket.actions.ts create and export async function getTickets()
-in component tickets/page.tsx import function getTickets from ticket.actions.ts file
-in function TicketsPage() create variable const tickets
-create function getPriorityClass()
-open route: http://localhost:3000/tickets
-in ticket.actions.ts file create and export async function getTicketById()
-in folder tickets create folder [id] and component page.tsx
-in component [id]/page.tsx create and export function TicketDetailsPage() as default
-import functions getTicketById, notFound and logEvent
-import component Link
-in folder utils create ui.ts file
-in ui.ts file export function getPriorityClass
-in component tickets/page.tsx import function getPriorityClass from ui.ts file
-create vercel.json file
-open route: http://localhost:3000/tickets/[id]
-create folder components and component Navbar.tsx
-in component layout.tsx import component Navbar
-in schema.prisma file create model User
-add to model Ticket relation with model User
-type command: npx prisma migrate dev --name add-user-model
-type command: npx prisma generate
-type command: npx prisma studio